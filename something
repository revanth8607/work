import requests
from tabulate import tabulate

data = [
    '\x02D', '001001', '0091', '19334937', 'E0', '017', '10.41', '019', '0.81', '020', '7.49', '021', '4.4', '022',
    '75.6', '023', '26', '024', '34', '025', '18',
    '\x02D', '000501', '0092', '19577610', 'E0', '007', '56.0',
    '\x02D', '000601', '0093', '22113344', 'E0', '016', '107.0',
    '\x02D', '000701', '0094', '19314614', 'E0', '010', '16.7', '020', '4.07',
    '\x02D', '000701', '0094', '1931222', 'E0', '010', '16.7'
]
grouped_data = []
current_group = []

for item in data:
    if item.startswith('\x02D'):
        if current_group:
            grouped_data.append(current_group)
        current_group = [item]
    else:
        current_group.append(item)

if current_group:
    grouped_data.append(current_group)

result_dict = {}

for group in grouped_data:
    index_of_e0 = group.index('E0')
    key = group[index_of_e0 - 1]
    even_values = [group[i] for i in range(index_of_e0 + 1, len(group), 2)]
    odd_values = [group[i] for i in range(index_of_e0 + 2, len(group), 2)]
    result_dict[key] = {'even_values': even_values, 'odd_values': odd_values}

for key, values in result_dict.items():
    table_data = []
    for even_value, odd_value in zip(values['even_values'], values['odd_values']):
        table_data.append([key, even_value, odd_value, "AU700", "hyd"])  # Add constant values

    headers = ['barcode', 'test_id', 'value', 'machine', 'branch']
    table = tabulate(table_data, headers, tablefmt='grid')

    print(f"Table for Group {key}:")
    print(table)

api_url = "http://192.168.0.2:85/api/Send"
headers = {
    'Authorization': 'Basic'
}

for key, values in result_dict.items():
    for even_value, odd_value in zip(values['even_values'], values['odd_values']):
        payload = {
            'barcode': key,
            'test_id': even_value,
            'result': odd_value,
            'machine': 'au',
            'branch': 'hyd'
        }
        try:
            response = requests.post(api_url, headers=headers, json=payload)
            response.raise_for_status()  # This raises an exception for HTTP errors

            if response.status_code == 200:
                print(f"API call for group {key} successful : {response.text}")
            else:
                print(f"API call for group {key} failed with status code {response.status_code}")

        except requests.exceptions.RequestException as e:
            print(f"An error occurred during the API call: {e}")

